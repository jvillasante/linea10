#!/bin/sh

echo Starting Genera scripts
# hostname -F /usr/local/bin/hostname

source /usr/local/bin/profile

# copy firmware version
if [ -f /usr/local/bin/Resources/settings/app.ini ]; then
  fwVersion=$(sed -n 's/^fwVersion*=*\([^ ]*.*\)/\1/p' < /usr/local/bin/Resources/settings/app.ini)
  echo "FIRMWARE VERSION: $fwVersion"
  sed -i "s/fwVersion=.*/fwVersion=\"$fwVersion\"/" /mnt/jffs2/app.ini
  rm -f /usr/local/bin/Resources/settings/app.ini
fi

# Call web server
/usr/sbin/httpd -p 80 -h /usr/local/bin/www

# TIMEZONE
if [ ! -f /etc/localtime ]; then
  touch /etc/localtime
fi
ln -sf /usr/local/bin/Santiago /etc/localtime

NTP_IP=$(sed -n 's/^ntpIP*=*\([^ ]*.*\)/\1/p' < /mnt/jffs2/app.ini)
if [ -z $NTP_IP ]; then # first run on old systems could fail!!!
  NTP_IP=200.54.149.19   # ip genera
  # NTP_IP=152.139.23.23   # ip banco de chile
fi
ntpd -p $NTP_IP

# rename old events.db to genera.db if exists
if [ -f /mnt/jffs2/events.db ]; then
  mv /mnt/jffs2/events.db /mnt/jffs2/genera.db
fi

# delete import db if exists
if [ -f /mnt/jffs2/import.db ]; then
  rm -f /mnt/jffs2/import.db
fi

# Install Genera Drivers
/usr/local/bin/GeneraDriversInstall.sh

# Calibration, check for missing or empty file
if [ ! -s /mnt/jffs2/pointercal ]; then
  /usr/bin/ts_calibrate
fi

# Create folder for events backup
if [ ! -d /mnt/jffs2/backup ]; then
  mkdir /mnt/jffs2/backup
fi

# Start Genera Embedded Applications
if [ -n "$BOARD" ]; then
  if [ "$BOARD" == "cerebro" ]; then
    if [ $MODO = "DEBUG" ]; then
      mkfifo /tmp/app.log

      nohup /usr/local/bin/GeneraApp -qws -display transformed:Rot270 2>&1 | /usr/local/bin/ftee /tmp/app.log &
      nohup /usr/local/bin/updater 2>&1 | /usr/local/bin/ftee /tmp/app.log &
      nohup /usr/local/bin/synchronizer 2>&1 | /usr/local/bin/ftee /tmp/app.log &
      nohup /usr/local/bin/backup 2>&1 | /usr/local/bin/ftee /tmp/app.log &
      exit
    elif [ $MODO = "RELEASE" ]; then
      nohup /usr/local/bin/GeneraApp -qws -display transformed:Rot270 > /dev/null 2>&1 &
      nohup /usr/local/bin/updater > /dev/null 2>&1 &
      nohup /usr/local/bin/synchronizer > /dev/null 2>&1 &
      nohup /usr/local/bin/backup > /dev/null 2>&1 &
      exit
    fi
  elif [ "$BOARD" == "ultragate" ]; then
    # nohup /usr/local/bin/GeneraApp -qws 2>&1 | /usr/local/bin/ftee /tmp/app.log &
    exit
  fi
fi

